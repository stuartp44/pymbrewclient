name: Test and Release

on:
  pull_request:
    types: [opened, synchronize, reopened] # Trigger when a PR is opened, updated, or reopened
  push:
    tags:
      - "v*" # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[dev]

      - name: Run tests with coverage
        run: |
          pytest --cov=pymbrewclient --cov-report=term-missing --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[dev]

      - name: Run ruff
        run: ruff check .

      - name: Run black
        run: black --check .

      - name: Run flake8
        run: flake8 .

      - name: Run mypy
        run: mypy pymbrewclient tests

  build:
    runs-on: ubuntu-latest
    needs: [test, lint] # Only run if test and lint jobs succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure all tags are fetched for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install build tools
        run: |
          pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [build] # Only run if the build job succeeds
    if: startsWith(github.ref, 'refs/tags/v') # Only run for version tags
    permissions:
      contents: read
      id-token: write # Required for OIDC authentication
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure all tags are fetched for setuptools_scm

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install twine
        run: pip install twine

      - name: Publish to PyPI using OIDC
        env:
          TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
        run: |
          python -m twine upload dist/*